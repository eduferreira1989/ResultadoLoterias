<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnResult.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAAUCAYAAACAl21KAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC44GzRO2AAAAzxJREFUOE+Vk1lM
        E1EUhkejD4YYH3hiEbtIoS0UxIoxoFiRYMRoxP3FJ+KSmAhBREVEERdUCBEUqwK1BI0xRjGSWGNFpGqx
        sqi1K0s7LJKr4Jq49/fO2JKq4PInXzJzz3/+Ofckw1Q6xcs0rvj+WnZBd7VbubOmJ1WgxsyJzP/qdFe0
        6Uy3HKe6pkPjng0tm2it6120o8qdKCoAM95r+7voRIMVzmD4qOwUoqon7v2F3sXNGtfcjBI2dJLX+mdV
        2IOIfxDHCWcoTjqFntpe1etLAysMarck0WsfW8dtwaTcEYzRqHCE0ECx5+JA+rDWtTC32Bo42dv2u8po
        0HF7CHyccQpw0x2H26wSVZ0i/qzcHobqnkS6v5RmLZu86FzfrECAGeeN+KFSSwgps4XCx02XEl+H1uDz
        0Gpc7JLRs6kjtZNOGc52J3zSuJKv1bnTVqm7RFO8MQxTYp5KSi1h8HHWHg5r/0J09KmgdUSOnPtTbovy
        nO5MeF7LLtWWW2co+emOPgkjR83TwFFrl+H54BK8JsvxivL2RTpMbBJKzQK+7k/JM3ptm+KzxpXGHrNM
        T2EOPxaQ4icCqC0RNCAd34bXwt6fijZWRa+3Bh76bnTPA+cZjRJzJE7Y4tuZg+1CcqhDCKNrPt3NWp4O
        Nhm2vlR+VxheR6dLR6VZCs73K7Tfc6hDdJcpfCQi+1vFeNabyn+do7s/DSbXAnx8uZoPevdiJWrMMeB8
        PyN6U9QmvFzUPi2W2WMUk70Pw3HFOgcfaKOHNr4lK/hm7pkL4oKPtMrA+TgKWsI9e03hbYUm8foiU1gQ
        wy07776E7H4QgX0tUlS0xqLekgC9Yz4aHSro7Ek4/3Q2ik1y5FMP58t7IPmUb5SU5RklQvUjv587tymS
        7GyWwscugxR5BtkIu/xquc0Rhh33JLM2+Af4lH1bRnKa5Bgb2ZecO3LntqbIzBxDxNi/SOatKJKlj8av
        ZN6K/palj2rP0ssObNdL5fwe/qQtOsXAFl0MfuKGgmzVKQ7QsLhRrzGaNjXENm5qiIOPzQ2xLZuvx6iy
        dYqAv07hr431M1My6pUk42r84Iar8TnZupSAgsaCCd7yP4phvgMuUntdR6CuKQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHxC/wh8Qv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHxC/wAAAAABDgddAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM5Ht0NyIf/C69x/wupav8AAAAAAAAAAAAAAAALr3H/DLl6/w3Q
        j/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwYH/C6lq/wqdYf8JlVn/CZNX/wAAAAAIfEL/Cpxg/wqi
        Zf8Lqmz/DMCA/wAAAAAAAAAAAAAAAAAAAAAIfEL/C6ts/wqbXv8JjlH/CINJ/wh/RP8Hcj3/CIdN/wmI
        Tv8KkFX/Cpte/wupav8NxoX/AAAAAAAAAAAAAAAAAyESrAqiZP8KkFT/CH9F/wh8Qv8IfEL/Blow6gh8
        Qv8IfEL/CYBG/wmOUv8KnmH/C69w/wAAAAAAAAAAAAAAAAAAAAAKnWH/CYpP/wh8Qv8IfEL/CHxC/wh8
        Qv8IfEL/CHxC/wh8Qv8IhUr/Cpda/wupa/8AAAAAAAAAAAAAAAAAAAAAAAAAAAh8Qv8IfEL/CHxC/wh8
        Qv8IfEL/CHxC/wh8Qv8IfEL/CYJH/wmVWf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHxC/wh8
        Qv8IfEL/CHxC/wh8Qv8IfEL/AEcjIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKo2b/CpBU/wh/
        RP8IfEL/CHxC/wh8Qv8IfEL/CHxC/wh8Qv8JgEb/CZNX/wAAAAAAAAAAAAAAAAAAAAAAAAAAC6dp/wmW
        W/8Ih0v/CHxC/wh8Qv8IfEL/CHxC/wh8Qv8IfEL/CIVK/wmWWv8LqGv/AAAAAAAAAAAAAAAAAAAAAAuw
        cf8KoWP/CZNX/wmITf8Jgkj/CHxC/wh8Qv8IfEL/CYNI/wqPVP8Ln2L/C69x/wAAAAAAAAAAAAAAAAAA
        AAAN0ZD/DK5v/wqjZv8Kml7/CZVZ/wAAAAAIfEL/CY5S/wmUWP8KnmH/C6ts/w3Jif8AAAAAAAAAAAAA
        AAAAAAAAAAAAAA7Wlf8MuXr/C6xu/wh8Qv8AAAAAAAAAAAqhZP8KpWj/C65w/w3Ih/8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHxC/wh8Qv8AAAAAAAAAAAAA
        AAAAAAAA//8AAP+fAAD/fwAAw48AAMEHAACAAwAAgAMAAMADAADgBwAA8D8AAMAHAADAAwAAwAMAAMED
        AADhhwAA/88AAA==
</value>
  </data>
</root>